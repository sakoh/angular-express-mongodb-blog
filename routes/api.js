// Generated by CoffeeScript 1.6.2
(function() {
  var MongoClient, blogs, connect, dataPosts, i, oldPost;

  dataPosts = [];

  MongoClient = require("mongodb").MongoClient;

  blogs = void 0;

  i = 0;

  oldPost = [];

  connect = MongoClient.connect("mongodb://127.0.0.1:27017/test", function(err, db) {
    if (err) {
      throw err;
    }
    console.log("connected to the database");
    blogs = db.collection("blogs");
    return blogs.find().toArray(function(error, docs) {
      return docs.forEach(function(doc) {
        dataPosts.push(doc);
        return console.log(doc);
      });
    });
  });

  exports.posts = function(req, res) {
    var posts;

    posts = [];
    dataPosts.forEach(function(post, i) {
      return posts.push({
        id: i,
        title: post.title,
        text: post.text.substr(0, 50) + "..."
      });
    });
    return res.json({
      posts: posts
    });
  };

  exports.post = function(req, res) {
    var id;

    id = req.params.id;
    if ((0 <= id && id < dataPosts.length)) {
      return res.json({
        post: dataPosts[id]
      });
    } else {
      return res.json(false);
    }
  };

  exports.addPost = function(req, res) {
    dataPosts.push(req.body);
    res.json(req.body);
    return blogs.insert(req.body, function(err, doc) {
      return console.log(doc);
    });
  };

  exports.editPost = function(req, res) {
    var id;

    id = req.params.id;
    if ((0 <= id && id < dataPosts.length)) {
      i++;
      oldPost[i] = dataPosts[id];
      dataPosts[id] = req.body;
      blogs.update({
        title: oldPost[i].title
      }, {
        $set: {
          title: dataPosts[id].title,
          text: dataPosts[id].text
        }
      }, {
        w: 1
      }, function(err, doc) {
        return console.log(doc);
      });
      return res.json(true);
    } else {
      return res.json(false);
    }
  };

  exports.deletePost = function(req, res) {
    var id;

    id = req.params.id;
    if (id >= 0 && id < dataPosts.length) {
      i++;
      oldPost[i] = dataPosts[id];
      dataPosts.splice(id, 1);
      blogs.remove(oldPost[i], function(err, doc) {
        return console.log(doc);
      });
      return res.json(true);
    } else {
      return res.json(false);
    }
  };

}).call(this);
